- name: Verify sql-actions.ps1 exists on EC2
  shell: pwsh
  run: |
    $verifyCommand = '"if (Test-Path ''C:\\Temp\\EmployeeInvitation\\sql-actions.ps1'') { Write-Host ''✅ File exists'' } else { Write-Host ''❌ File missing''; exit 1 }"'

    $commandId = aws ssm send-command `
      --document-name "AWS-RunPowerShellScript" `
      --instance-ids "i-0abc123def456ghij" `
      --region "us-west-2" `
      --parameters @{ "commands" = @($verifyCommand) } `
      --comment "Verify sql-actions.ps1 file exists" `
      --query "Command.CommandId" `
      --output text

    aws ssm wait command-executed `
      --region "us-west-2" `
      --command-id $commandId `
      --instance-id "i-0abc123def456ghij"







-----------------

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      # Your existing steps...
      
      - name: Send sql-actions.ps1 to target server
        uses: ./.github/actions/send-file-via-ssm  # Assuming you save the action here
        with:
          file-path: './od-gha-files/sql-actions.ps1'
          instance-id: 'your-ec2-instance-id'
          destination-path: 'C:\Temp'
          
      - name: Verify file on target server
        shell: pwsh
        run: |
          $result = aws ssm send-command `
            --instance-ids "your-ec2-instance-id" `
            --document-name "AWS-RunPowerShellScript" `
            --parameters "commands=[Test-Path 'C:\Temp\sql-actions.ps1'; Get-Item 'C:\Temp\sql-actions.ps1' | Select-Object -Property FullName,Length,LastWriteTime]" `
            --output json
          
          $commandResult = $result | ConvertFrom-Json
          $commandId = $commandResult.Command.CommandId
          
          # Wait a few seconds for command to complete
          Start-Sleep -Seconds 5
          
          $output = aws ssm get-command-invocation `
            --command-id $commandId `
            --instance-id "your-ec2-instance-id" `
            --output json | ConvertFrom-Json
          
          Write-Host "File verification output:"
          Write-Host $output.StandardOutputContent
          
          if ($output.Status -ne 'Success') {
            throw "File verification failed"
          }

----------------

Refreshing environment variables from the registry for powershell.exe. Please wait...
Finished
aws.exe : The command parameter was already specified.
At C:\actions-runner\_work\_temp\ef10e601-d2a7-4318-86be-e5f0090f48df.ps1:2 char:14
+ $commandId = aws ssm send-command `
+              ~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : ParameterSpecifiedAlready
 
Error: Process completed with exit code 1.
