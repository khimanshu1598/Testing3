param (
    [string]$Channel,
    [string]$Username,
    [string]$HookUrl,
    [string]$DeploymentError = "",
    [string]$ProjectName = "",
    [string]$ReleaseNumber = "",
    [string]$EnvironmentName = "",
    [string]$TargetRoles = "",
    [string]$TenantName = "",
    [string]$DeploymentLink = "",
    [string]$ProjectLink = "",
    [string]$ReleaseLink = ""
)

function Slack-Rich-Notification ($notification)
{
    $payload = @{
        channel    = $Channel
        username   = $Username
        attachments = @(
            @{
                fallback = $notification["fallback"]
                color    = $notification["color"]
                fields   = @(
                    @{
                        title      = $notification["title"]
                        title_link = $notification["title_link"]
                        value      = $notification["value"]
                    }
                )
            }
        )
    }

    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    Invoke-RestMethod -Method POST -Body ($payload | ConvertTo-Json -Depth 4) -Uri $HookUrl -ContentType 'application/json'
}

# Format tenant suffix
$TenantSuffix = if ($TenantName) { "for tenant $TenantName" } else { "" }

# Build the Slack message value
$messageValue = "Deploy <$ProjectLink|$ProjectName> release <$ReleaseLink|$ReleaseNumber> to $EnvironmentName $TargetRoles $TenantSuffix".Trim()

# Send success or failure notification
if (-not $DeploymentError) {
    Slack-Rich-Notification @{
        title      = "Success"
        title_link = $DeploymentLink
        value      = $messageValue
        fallback   = "Deployed $ProjectName release $ReleaseNumber to $EnvironmentName successfully $TenantSuffix"
        color      = "good"
    }
} else {
    Slack-Rich-Notification @{
        title      = "Failed"
        title_link = $DeploymentLink
        value      = $messageValue
        fallback   = "Failed to deploy $ProjectName release $ReleaseNumber to $EnvironmentName $TenantSuffix"
        color      = "danger"
    }
}


####################################

      - name: Send Slack Notification
        shell: pwsh
        run: |
          ./scripts/send-slack-notification.ps1 `
            -Channel '${{ secrets.SLACK_CHANNEL }}' `
            -Username 'GitHub Actions Bot' `
            -HookUrl '${{ secrets.SLACK_HOOK_URL }}' `
            -DeploymentError '' `
            -ProjectName '${{ github.event.repository.name }}' `
            -ReleaseNumber '${{ github.run_number }}' `
            -EnvironmentName 'Dev' `
            -TargetRoles 'web,api' `
            -TenantName '${{ github.event.inputs.tenant }}' `
            -DeploymentLink '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' `
            -ProjectLink '${{ github.server_url }}/${{ github.repository }}' `
            -ReleaseLink '${{ github.server_url }}/${{ github.repository }}/releases'
