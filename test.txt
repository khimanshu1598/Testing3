name: 'Generate and Store Password'
description: 'Generates a secure random password and stores it in AWS SSM Parameter Store'

inputs:
  parameter-name:
    description: 'AWS SSM parameter path (e.g., /prod/db/password)'
    required: true
  aws-region:
    description: 'AWS region (default: us-east-1)'
    default: 'us-east-1'
  password-length:
    description: 'Password length (default: 16)'
    default: '16'

outputs:
  parameter-path:
    description: 'The SSM parameter path where password is stored'
  password-valid:
    description: 'Whether password meets complexity requirements'

runs:
  using: "composite"
  steps:
    - name: Generate password
      shell: pwsh
      run: |
        # Generate password with complexity requirements
        $password = -join (
          (65..90) +          # A-Z
          (97..122) +         # a-z
          (48..57) +          # 0-9
          (33..47) |          # Special chars
          Get-Random -Count ${{ inputs.password-length }} | 
          ForEach-Object { [char]$_ }
        )

        # Verify complexity
        $hasUpper = $password -cmatch '[A-Z]'
        $hasLower = $password -match '[a-z]'
        $hasNumber = $password -match '\d'
        $hasSpecial = $password -match '[^\w]'
        $isValid = $hasUpper -and $hasLower -and $hasNumber -and $hasSpecial

        if (-not $isValid) {
          echo "::error::Password generation failed complexity check!"
          exit 1
        }

        echo "::add-mask::$password"
        echo "generated-password=$password" >> $GITHUB_OUTPUT
        echo "password-valid=true" >> $GITHUB_OUTPUT

    - name: Store in Parameter Store
      shell: pwsh
      run: |
        aws ssm put-parameter \
          --name "${{ inputs.parameter-name }}" \
          --value "${{ steps.generate-password.outputs.generated-password }}" \
          --type "SecureString" \
          --overwrite \
          --region "${{ inputs.aws-region }}"
        echo "parameter-path=${{ inputs.parameter-name }}" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


==================

steps:
  - name: Generate database password
    id: generate-db-pass
    uses: ./.github/actions/generate-password
    with:
      parameter-name: '/prod/mysql/master-password'
      aws-region: 'us-west-2'
      password-length: 24

  - name: Verify storage
    run: |
      echo "Password stored at: ${{ steps.generate-db-pass.outputs.parameter-path }}"
      echo "Complexity valid: ${{ steps.generate-db-pass.outputs.password-valid }}"
