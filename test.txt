name: Test Download Package Action

on:
  pull_request:
    paths:
      - 'paassql-pipelines/download-package-and-contributor-package/**'
      - '.github/workflows/test-download-package-and-contributor-package.yaml'

permissions:
  contents: read

env:
  TEST_PACKAGE: "TestPackage.1.0.0.nupkg"  # Replace with real test package
  ARTIFACTORY_URL: "https://your-artifactory.example.com"  # Replace with test URL

jobs:
  success-test:
    runs-on: [ self-hosted, windows, runners-us-east-1 ]
    steps:
    - name: Checkout action
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          paassql-pipelines/download-package-and-contributor-package
          .github

    - name: Create temp directories
      shell: powershell
      run: |
        $tempDir = "C:\pkg-test-$(Get-Date -Format 'yyyyMMdd')"
        mkdir "$tempDir\download", "$tempDir\extract" -Force | Out-Null
        echo "DL_PATH=$tempDir\download" >> $env:GITHUB_ENV
        echo "EXTRACT_PATH=$tempDir\extract" >> $env:GITHUB_ENV

    - name: Run download action
      uses: ./paassql-pipelines/download-package-and-contributor-package
      with:
        nuget-pkg-download-path: ${{ env.DL_PATH }}
        nuget-pkg-extract-path: ${{ env.EXTRACT_PATH }}
        package-name: ${{ env.TEST_PACKAGE }}
        webrequest-uri: ${{ env.ARTIFACTORY_URL }}

    - name: Verify download
      shell: powershell
      run: |
        if (-not (Test-Path "$env:DL_PATH\$env:TEST_PACKAGE")) {
          Write-Error "Package was not downloaded"
          exit 1
        }
        Write-Host "✓ Package downloaded successfully"

    - name: Verify extraction
      shell: powershell
      run: |
        if (-not (Get-ChildItem "$env:EXTRACT_PATH" -File -Recurse)) {
          Write-Error "No files were extracted"
          exit 1
        }
        Write-Host "✓ Files extracted successfully"

    - name: Cleanup
      if: always()
      shell: powershell
      run: Remove-Item -Path "C:\pkg-test-*" -Recurse -Force -ErrorAction SilentlyContinue

  input-validation:
    runs-on: [ self-hosted, windows, runners-us-east-1 ]
    strategy:
      matrix:
        missing_input: [
          'nuget-pkg-download-path',
          'nuget-pkg-extract-path',
          'package-name',
          'webrequest-uri'
        ]
    steps:
    - name: Checkout action
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          paassql-pipelines/download-package-and-contributor-package
          .github

    - name: Test missing [${{ matrix.missing_input }}]
      id: validation-test
      uses: ./paassql-pipelines/download-package-and-contributor-package
      with:
        nuget-pkg-download-path: ${{ matrix.missing_input != 'nuget-pkg-download-path' && 'C:\\valid' || '' }}
        nuget-pkg-extract-path: ${{ matrix.missing_input != 'nuget-pkg-extract-path' && 'C:\\valid' || '' }}
        package-name: ${{ matrix.missing_input != 'package-name' && 'valid.pkg' || '' }}
        webrequest-uri: ${{ matrix.missing_input != 'webrequest-uri' && 'https://valid.url' || '' }}
      continue-on-error: true

    - name: Verify failure
      if: ${{ !cancelled() }}
      shell: powershell
      run: |
        if (${{ steps.validation-test.outcome }} -ne 'failure') {
          Write-Error "Action should have failed with missing ${{ matrix.missing_input }}"
          exit 1
        }
        Write-Host "✓ Correctly failed with missing ${{ matrix.missing_input }}"


###################

  failure-test:
    name: Failure test with missing inputs
    needs: success-test
    environment: test
    runs-on: [self-hosted, windows, x64, runners-us-east-1]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run download-package-and-contributor-package without required inputs
        id: run-failure
        uses: ./paassql-pipelines/download-package-and-contributor-package
        continue-on-error: true
        with:
          nuget-pkg-download-path: ''
          nuget-pkg-extract-path: ''
          package-name: ''
          webrequest-uri: ''

      - name: Verify the action failed as expected
        if: ${{ !cancelled() }}
        shell: pwsh
        run: |
          if ("${{ steps.run-failure.outcome }}" -ne "failure") {
            Write-Host "Expected the action to fail due to missing inputs."
            exit 1
          }
