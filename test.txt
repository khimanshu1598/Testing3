# Fetch SQL Credentials from AWS SSM Parameter Store
$SQL_USER = (Get-SSMParameter -Name "/secure/sql_user" -WithDecryption $false).Value
$SQL_PASSWORD = (Get-SSMParameter -Name "/secure/sql_password" -WithDecryption $true).Value

$SecurePassword = ConvertTo-SecureString -String $SQL_PASSWORD -AsPlainText -Force
$Credential = New-Object System.Management.Automation.PSCredential ($SQL_USER, $SecurePassword)

# SQL Connection Variables
$serverName = "abc.db.livestage6.test.abc.com"
$databaseName = "Abc"

# Connection String with SQL Authentication
$connectionString = "Server=$serverName;Database=$databaseName;User ID=$SQL_USER;Password=$SQL_PASSWORD;Encrypt=False;TrustServerCertificate=True;"

# Step 1: Validate Credentials by Opening Connection
try {
    $connection = New-Object System.Data.SqlClient.SqlConnection -ArgumentList $connectionString
    $connection.Open()
    Write-Output "Connection successful to $serverName using SQL Authentication."
    $connection.Close()
}
catch {
    Write-Error "Connection Failed: $($_.Exception.Message)"
    exit 1  # Stop execution if DB connection fails
}

# Step 2: Prepare SQL Package (DACPAC) Execution
$SqlPackageFilePath = "C:\Program Files (x86)\Microsoft SQL Server\130\DAC\bin\SqlPackage.exe"
$scriptToRun = "C:\Temp\dacpac-execution.ps1"

$Action = "Extract"
$TargetServers = "abc.db.livestage6.test.abc.com"
$DatabaseNames = "Abc"

$targetServerCollection = $TargetServers -split ","
$databaseNameCollection = $DatabaseNames -split ","

# Generate the script to run the extraction
@"
`$SqlPackageFilePath = '$SqlPackageFilePath'
`$targetServerCollection = '$TargetServers' -split ","
`$databaseNameCollection = '$DatabaseNames' -split ","
foreach (`$targetServer in `$targetServerCollection) {
    foreach (`$databaseName in `$databaseNameCollection) {
        `$connectionString = "Server=`$targetServer;Database=`$databaseName;User ID=$SQL_USER;Password=$SQL_PASSWORD;Encrypt=False;TrustServerCertificate=True;"
        `$sqlPackageCommand = "/Action:$Action /TargetFile:C:\Temp\test.dacpac /SourceConnectionString=`"`$connectionString`""
        `$fullCommand = "& `"`$SqlPackageFilePath`" `$sqlPackageCommand"
        Invoke-Expression `$fullCommand
    }
}
"@ | Out-File -FilePath $scriptToRun -Encoding utf8

# Step 3: Run the Script using AWS SSM Run Command
Start-Process powershell.exe -Credential $Credential -ArgumentList "-File $scriptToRun" -NoNewWindow -Wait
