- name: Verify files on target server
  shell: pwsh
  run: |
    # Send command to list files
    $commandOutput = aws ssm send-command `
      --instance-id "${{ env.AWS_INSTANCE_ID }}" `
      --document-name "AWS-RunPowerShellScript" `
      --parameters '{"commands":["Get-ChildItem -Path \"C:\\Temp\\EmployeeInvitation\" | Select-Object Name,Length,LastWriteTime | ConvertTo-Json"]}' `
      --output json
    
    # Get command ID
    $commandId = ($commandOutput | ConvertFrom-Json).Command.CommandId
    
    # Wait for command to complete
    Start-Sleep -Seconds 5
    
    # Get command results
    $result = aws ssm get-command-invocation `
      --command-id $commandId `
      --instance-id "${{ env.AWS_INSTANCE_ID }}" `
      --output json | ConvertFrom-Json
    
    # Output the file list
    Write-Host "Files in C:\Temp\EmployeeInvitation:"
    if ($result.Status -eq "Success") {
      $files = $result.StandardOutputContent | ConvertFrom-Json
      $files | Format-Table -AutoSize | Out-Host
    } else {
      Write-Host "Error checking files:"
      Write-Host $result.StandardErrorContent
      exit 1
    }









-----------------

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      # Your existing steps...
      
      - name: Send sql-actions.ps1 to target server
        uses: ./.github/actions/send-file-via-ssm  # Assuming you save the action here
        with:
          file-path: './od-gha-files/sql-actions.ps1'
          instance-id: 'your-ec2-instance-id'
          destination-path: 'C:\Temp'
          
      - name: Verify file on target server
        shell: pwsh
        run: |
          $result = aws ssm send-command `
            --instance-ids "your-ec2-instance-id" `
            --document-name "AWS-RunPowerShellScript" `
            --parameters "commands=[Test-Path 'C:\Temp\sql-actions.ps1'; Get-Item 'C:\Temp\sql-actions.ps1' | Select-Object -Property FullName,Length,LastWriteTime]" `
            --output json
          
          $commandResult = $result | ConvertFrom-Json
          $commandId = $commandResult.Command.CommandId
          
          # Wait a few seconds for command to complete
          Start-Sleep -Seconds 5
          
          $output = aws ssm get-command-invocation `
            --command-id $commandId `
            --instance-id "your-ec2-instance-id" `
            --output json | ConvertFrom-Json
          
          Write-Host "File verification output:"
          Write-Host $output.StandardOutputContent
          
          if ($output.Status -ne 'Success') {
            throw "File verification failed"
          }

----------------

Error parsing parameter '--parameters': Expected: ',', received: ''' for input:
 commands=[if (Test-Path 'C:\\Temp\\EmployeeInvitation\\sql-actions.ps1') { Write-Host 'File exists' } else { Write-Host 'File missing'; exit 1 }]
                        ^
Verify Command ID: 
usage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]
To see help text, you can run:
  aws help
  aws <command> help
  aws <command> <subcommand> help
aws.exe: error: argument --command-id: expected one argument
