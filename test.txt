name: 'Generate and Store Password'
description: 'Generates a secure random password and stores it in AWS SSM Parameter Store'

inputs:
  parameter-name:
    description: 'SSM Parameter Store path (e.g., /prod/db/password)'
    required: true
  password-length:
    description: 'Password length (default: 16)'
    default: '16'
  aws-region:
    description: 'AWS region (default: us-east-1)'
    default: 'us-east-1'

outputs:
  parameter-path:
    description: 'The SSM path where password was stored'
  password-valid:
    description: 'Whether password met complexity rules'

runs:
  using: "composite"
  steps:
    - name: Generate password
      shell: pwsh
      run: |
        # Generate password with 4-character types
        $password = -join (
          (65..90) +   # A-Z
          (97..122) +  # a-z
          (48..57) +   # 0-9
          (33..47) |   # !"#$%&'()*+,-./
          Get-Random -Count ${{ inputs.password-length }} | 
          ForEach-Object { [char]$_ }
        )

        # Verify complexity (customize rules as needed)
        $isValid = $password -match '[A-Z]' -and 
                   $password -match '[a-z]' -and 
                   $password -match '\d' -and 
                   $password -match '[^\w]'

        echo "::add-mask::$password"
        echo "generated-password=$password" >> $GITHUB_OUTPUT
        echo "password-valid=$isValid" >> $GITHUB_OUTPUT

    - name: Store in Parameter Store
      if: steps.generate-password.outputs.password-valid == 'true'
      shell: pwsh
      run: |
        aws ssm put-parameter \
          --name "${{ inputs.parameter-name }}" \
          --value "${{ steps.generate-password.outputs.generated-password }}" \
          --type "SecureString" \
          --overwrite \
          --region "${{ inputs.aws-region }}"
        echo "parameter-path=${{ inputs.parameter-name }}" >> $GITHUB_OUTPUT

==============================

steps:
  - uses: aws-actions/configure-aws-credentials@v4  # Required for OIDC
    with:
      role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
      aws-region: us-east-1

  - name: Generate and store password
    id: password-gen
    uses: ./.github/actions/generate-password
    with:
      parameter-name: '/prod/db/master-password'
      password-length: 24
      aws-region: us-east-1

  - name: Verify result
    run: |
      echo "Password stored at: ${{ steps.password-gen.outputs.parameter-path }}"
      echo "Complexity valid: ${{ steps.password-gen.outputs.password-valid }}"
