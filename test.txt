name: Deploy DACPAC Utility to Target Instance

on:
  workflow_dispatch:
  push:
    branches:
      - "release/poc-gha-od-testing"

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  DACPAC_UTILITY_PATH: "od-gha-files"

jobs:
  test-ssm:
    runs-on: [self-hosted, linux, x64, runners-us-west-2]
    environment: uat
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Assume OIDC Role"
        id: assume_oidc_role
        uses: abc-internal/github-actions/aws-assume-oidc@main
        with:
          oidc-role-to-assume: ${{ vars.oidc_role_arn }}
          target-role-to-assume: ${{ vars.deployment_role_arn }}
          aws-region: us-west-2

      - name: "Transfer Scripts to Target Instance"
        uses: ./.github/actions/dacpac-utility-ssm
        with:
          aws_region: us-west-2
          script_path: "${{ env.DACPAC_UTILITY_PATH }}/dacpac-utility.ps1"
          config_path: "${{ env.DACPAC_UTILITY_PATH }}/uat.ps1"
          instance_name: GSQN-45VQKN

      - name: "Verify File Transfer on Target Instance"
        run: |
          instance_id=$(aws ec2 describe-instances \
            --region us-west-2 \
            --filters "Name=tag:Name,Values=GSQN-45VQKN" "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" --output text)

          aws ssm send-command \
            --region us-west-2 \
            --instance-ids "$instance_id" \
            --document-name "AWS-RunPowerShellScript" \
            --parameters commands='[
              "Write-Host \"Checking if scripts exist...\"",
              "if (Test-Path C:/Temp/dacpac-utility.ps1) { Write-Host \"dacpac-utility.ps1 exists\" } else { Write-Host \"ERROR: dacpac-utility.ps1 missing!\"; exit 1 }",
              "if (Test-Path C:/Temp/uat.ps1) { Write-Host \"uat.ps1 exists\" } else { Write-Host \"ERROR: uat.ps1 missing!\"; exit 1 }",
              "Write-Host \"File Transfer Verified Successfully.\""
            ]' \
            --timeout-seconds 300 \
            --max-concurrency "50" \
            --max-errors "0" \
            --query "Command.CommandId" \
            --output text

      - name: "Preview UAT Configuration File (uat.ps1)"
        run: |
          instance_id=$(aws ec2 describe-instances \
            --region us-west-2 \
            --filters "Name=tag:Name,Values=GSQN-45VQKN" "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" --output text)

          aws ssm send-command \
            --region us-west-2 \
            --instance-ids "$instance_id" \
            --document-name "AWS-RunPowerShellScript" \
            --parameters commands='[
              "Write-Host \"Displaying uat.ps1 Contents...\"",
              "Get-Content C:/Temp/uat.ps1"
            ]' \
            --timeout-seconds 300 \
            --max-concurrency "50" \
            --max-errors "0" \
            --query "Command.CommandId" \
            --output text
