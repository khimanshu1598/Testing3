runs:
  using: composite
  steps:
    - name: Validate required inputs
      shell: powershell
      env:
        Action: ${{ inputs.Action }}
        DatabaseName: ${{ inputs.DatabaseName }}
        UserName: ${{ inputs.UserName }}
        SqlPackagePath: ${{ inputs.SqlPackagePath }}
        sql-password-parameter-store: ${{ inputs.sql-password-parameter-store }}
        ArtifactDownloadPath: ${{ inputs.ArtifactDownloadPath }}
        ReleaseNumber: ${{ inputs.ReleaseNumber }}
        FileName: ${{ inputs.FileName }}
        TargetServer: ${{ inputs.TargetServer }}
        PublishProfileFilePath: ${{ inputs.PublishProfileFilePath }}
        UseMultiSubnetFailover: ${{ inputs.UseMultiSubnetFailover }}
        SQLPackageDeployProperties: ${{ inputs.SQLPackageDeployProperties }}
        SQLCMDVariables: ${{ inputs.SQLCMDVariables }}
        SQLPackageParameters: ${{ inputs.SQLPackageParameters }}
        aws-region: ${{ inputs.aws-region }}
      run: |
        $requiredInputs = @(
          'Action',
          'DatabaseName',
          'UserName',
          'SqlPackagePath',
          'sql-password-parameter-store',
          'ArtifactDownloadPath',
          'ReleaseNumber',
          'FileName',
          'TargetServer',
          'PublishProfileFilePath',
          'UseMultiSubnetFailover',
          'SQLPackageDeployProperties',
          'SQLCMDVariables',
          'SQLPackageParameters',
          'aws-region'
        )

        foreach ($name in $requiredInputs) {
          $value = $env:$name
          if ([string]::IsNullOrWhiteSpace($value)) {
            Write-Host "::error::$name input is required but was not provided or is empty."
            exit 1
          }
        }
