paassql-pipelines/validate-create-sql-user/action.yaml: -

name: 'Create a new SQL user'
description: 'Transfer the powershell scripts to Target server, Validate the existing sql user and delete and create a new sql user'

inputs:
  destination-path:
    description: 'Path on the target server where script needs to be added'
    required: true
  aws-region:
    description: 'AWS region details'
    required: true
  sql-password-parameter-store:
    description: 'Name of the system manager parameter store which contains password for sql user'
    required: true
  db-name:
    description: 'Name of the Database'
    required: true
  sql-user-name:
    description: 'Name of the sql user to be created'
    required: true
  username:
    description: 'Username of impersonated user in domainName\username format'
    required: true
  needs-windows-authentication:
    description: 'Boolean value to impersonate the user using Windows Authentication or SQL Server Authentication'
    required: true
    default: true

runs:
  using: composite
  steps:
  - name: Validate inputs
    shell: pwsh
    run: |
      # Required field validation
      $requiredInputs = @(
        @{Name='destination-path'; Value="${{ inputs.destination-path }}"},
        @{Name='aws-region'; Value="${{ inputs.aws-region }}"},
        @{Name='sql-password-parameter-store'; Value="${{ inputs.sql-password-parameter-store }}"},
        @{Name='db-name'; Value="${{ inputs.db-name }}"},
        @{Name='sql-user-name'; Value="${{ inputs.sql-user-name }}"},
        @{Name='username'; Value="${{ inputs.username }}"}
      )

      foreach ($input in $requiredInputs) {
        if ([string]::IsNullOrWhiteSpace($input.Value)) {
          Write-Host "::error::$($input.Name) is required"
          exit 1
        }
      }

  - name: Transfer GHA scripts to target server
    id: transfer-script
    uses: xero-internal/dacpac-actions/paassql-pipelines/transfer-script@PIP-2135-Himanshu
    with:
      destination-path: ${{ inputs.destination-path }}
      aws-region: ${{ inputs.aws-region }}

  - name: Validate if the SQL User exists and delete the SQL User
    id: validate-user
    uses: xero-internal/dacpac-actions/paassql-pipelines/invoke-sql-actions@PIP-2135-Himanshu
    with:
      sql-password-parameter-store: ${{ inputs.sql-password-parameter-store }}
      db-name: ${{ inputs.db-name }}
      sql-user-name: ${{ inputs.sql-user-name }}
      sql-activity: 'validate-delete-user'
      destination-path: ${{ inputs.destination-path }}
      aws-region: ${{ inputs.aws-region }}
      username: ${{ inputs.username }}
      needs-windows-authentication: ${{ inputs.needs-windows-authentication }}

  - name: Create a New SQL User and grant permissions to the new user
    id: create-user
    uses: xero-internal/dacpac-actions/paassql-pipelines/invoke-sql-actions@PIP-2135-Himanshu
    with:
      sql-password-parameter-store: ${{ inputs.sql-password-parameter-store }}
      db-name: ${{ inputs.db-name }}
      sql-user-name: ${{ inputs.sql-user-name }}
      sql-activity: 'create-user'
      destination-path: ${{ inputs.destination-path }}
      aws-region: ${{ inputs.aws-region }}
      username: ${{ inputs.username }}
      needs-windows-authentication: ${{ inputs.needs-windows-authentication }}

#########################################
.github/workflows/payroll-au-superannuation.yml: -

    - name: Create a new SQL User
      id: create-user
      uses: ./.github/actions/validate-create-sql-user
      with:
        file-path: '${{ env.OD_GHA_FILE_PATH }}/sql-actions.ps1'
        destination-path: 'C:\\Temp\\Superannuation'
        aws-region: ${{ env.AWS_REGION }}
        sql-password-parameter-store: ${{ env.SQL_PASSWORD_PARAMETER_STORE }}
        db-name: ${{ env.DB_NAME }}
        sql-user-name: ${{ env.SQL_USER_NAME }}
        username: ${{ env.IMPERSONATED_USERNAME }}
