Generate a detailed flowchart of GitHub Actions workflows integration for DACPAC Deployment for Workpapers DB. The structure includes four workflows with nested calls and job dependencies.

🧩 Workflow: .github/workflows/workpapers_db.yml (Main Entry Point)
- Triggered by:
  - workflow_dispatch (manual input: release-number)
  - pull_request changes to this file
- Calls:
  - Job: deploy-uat ➡️ calls `dacpac_workflow.yml` with environment=test
  - Job: approval-prod-env ➡️ calls `approval.yml` (manual gate for production)
  - Job: deploy-prod ➡️ calls `dacpac_workflow.yml` with environment=production

📦 Workflow: .github/workflows/dacpac_workflow.yml (Reusable Deployment Orchestration)
- Triggered by: `workflow_call` from workpapers_db.yml
- Calls:
  - Job: dacpac-deploy-report ➡️ calls `deploy_dacpac.yml` with action=DeployReport
  - Job: dacpac-deploy-script ➡️ calls `deploy_dacpac.yml` with action=Script
  - Job: dacpac-publish ➡️ calls `deploy_dacpac.yml` with action=Publish
  - Job: approval (conditional) ➡️ calls `approval.yml` for manual intervention
- Job Execution Sequence:
  1. start-deploy-track
  2. download-packages
  3. prepare-matrix-list
  4. setup-db-user
  5. dacpac-deploy-report (→ deploy_dacpac.yml)
  6. dacpac-deploy-script (→ deploy_dacpac.yml)
  7. notify-start (Slack start)
  8. approval (→ approval.yml) [only if approval-environment is set]
  9. dacpac-publish (→ deploy_dacpac.yml)
 10. cleanup-db-user
 11. notify (Slack + DeployTrack end)

🛠️ Workflow: .github/workflows/deploy_dacpac.yml (Performs DACPAC Operation)
- Triggered by: dacpac_workflow.yml
- Purpose: Executes SQL DACPAC action (DeployReport, Script, Publish)
- Steps:
  - OIDC role assumption
  - Download artifacts
  - Perform DACPAC Action via sql-dacpac-deployer
  - Upload output (for DeployReport/Script)
  - Post New Relic event if action=Publish

🛑 Workflow: .github/workflows/approval.yml (Reusable Manual Approval)
- Triggered by:
  - workpapers_db.yml ➡️ approval-prod-env
  - dacpac_workflow.yml ➡️ approval
- Contains:
  - Single job: approval (manual review before continuing)

🧭 Flowchart Integration Tree:
workpapers_db.yml
├── deploy-uat
│   └── calls dacpac_workflow.yml (test)
│       ├── dacpac-deploy-report ──▶ deploy_dacpac.yml (DeployReport)
│       ├── dacpac-deploy-script ──▶ deploy_dacpac.yml (Script)
│       └── dacpac-publish ────────▶ deploy_dacpac.yml (Publish)
│
├── approval-prod-env
│   └── calls approval.yml
│
└── deploy-prod
    └── calls dacpac_workflow.yml (production)
        ├── same steps as above
        └── approval ──────────────▶ approval.yml

🔔 Notifications:
- notify-start and notify jobs send Slack updates
- DeployTrack integration runs at start and end of dacpac_workflow

📥 Inputs passed: release-number, runner-region, project-name, af-path, destination-path
📤 Outputs chained across jobs using `outputs:` and `needs:` pattern

Highlight all reusable workflow calls (`uses: ./.github/workflows/...`) and show environment-specific flows separately.

