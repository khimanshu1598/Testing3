runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: pwsh
      run: |
        # Required inputs validation
        if (-not "${{ inputs.release-artifact }}") {
          Write-Host "::error::release-artifact is required"
          exit 1
        }
        
        if (-not "${{ inputs.environment }}") {
          Write-Host "::error::environment is required"
          exit 1
        }
        
        if (-not "${{ inputs.new-relic-app-key }}") {
          Write-Host "::error::new-relic-app-key is required"
          exit 1
        }
        
        # Validate account ID is numeric
        if (-not (${{ inputs.new-relic-app-key }} -match '^\d+$')) {
          Write-Host "::error::new-relic-app-key must be a numeric account ID"
          exit 1
        }
        
        if (-not "${{ inputs.new-relic-api-key }}") {
          Write-Host "::error::new-relic-api-key is required"
          exit 1
        }
        
        if (-not "${{ inputs.deployer }}") {
          Write-Host "::error::deployer is required"
          exit 1
        }
        
        if (-not "${{ inputs.owner }}") {
          Write-Host "::error::owner is required"
          exit 1
        }
        
        if (-not "${{ inputs.release-number }}") {
          Write-Host "::error::release-number is required"
          exit 1
        }
        
        if (-not "${{ inputs.github-run-url }}") {
          Write-Host "::error::github-run-url is required"
          exit 1
        }
        
        if (-not "${{ inputs.target-servers }}") {
          Write-Host "::error::target-servers is required"
          exit 1
        }
        
        # Validate URL format if needed
        if (-not (${{ inputs.github-run-url }} -match '^https?://')) {
          Write-Host "::error::github-run-url must be a valid URL"
          exit 1
        }

##############################

# New Relic Release Event Trigger

Triggers a release event in New Relic to track database deployments.

## Inputs

| Name | Description | Required | Validation |
|------|-------------|----------|------------|
| `release-artifact` | Name of the deployed database/artifact | Yes | Non-empty string |
| `environment` | Target environment name | Yes | Non-empty string |
| `new-relic-app-key` | New Relic account ID | Yes | Numeric value |
| `new-relic-api-key` | New Relic Insights API key | Yes | Valid API key |
| `deployer` | Who triggered the deployment | Yes | Non-empty string |
| `owner` | Owner of the release event | Yes | Non-empty string |
| `release-number` | Build release number | Yes | Non-empty string |
| `github-run-url` | GitHub run URL | Yes | Valid URL format |
| `target-servers` | Target server names | Yes | Non-empty string |

## Prerequisites

1. **New Relic Account**: With Insights enabled
2. **API Key**: With permissions to create custom events
3. **Account ID**: Numeric New Relic account ID

## Example Usage

```yaml
- name: Trigger New Relic Release
  uses: your-repo/trigger-newrelic-release@v1
  with:
    release-artifact: 'PayrollDatabase'
    environment: 'production'
    new-relic-app-key: '1234567'
    new-relic-api-key: ${{ secrets.NEW_RELIC_API_KEY }}
    deployer: ${{ github.actor }}
    owner: 'Database Team'
    release-number: 'v2.1.5'
    github-run-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    target-servers: 'db-server-01,db-server-02'
```

## Supported Runners

- **Windows**: Native PowerShell support
- **Linux/macOS**: Requires PowerShell Core

## Error Handling

The action will fail if:
- Any required input is missing
- New Relic API key is invalid
- Account ID is not numeric
- API request fails (with detailed error message)
- GitHub run URL is malformed

## Output Format

Creates a New Relic custom event with these fields:
- Event Type: `ReleaseEvent`
- Title: `Released [artifact] database to [environment]`
- Markdown-formatted description
- Environment name
- Deployment engine (GitHub Action)
- Product name
- Owner and deployer information
