Generate a clean flowchart that visualizes the GitHub Actions workflows for DACPAC deployment of Workpapers DB. Show how the four workflows are connected and their high-level responsibilities. Keep it simple and structured.

🏁 1. Main Workflow: `.github/workflows/workpapers_db.yml`
- Triggered by:
  - Manual input (`workflow_dispatch`)
  - PR changes to this file
- Contains 3 jobs:
  - `deploy-uat` → Calls reusable workflow: `dacpac_workflow.yml` (for UAT)
  - `approval-prod-env` → Calls reusable workflow: `approval.yml` (manual prod approval)
  - `deploy-prod` → Calls reusable workflow: `dacpac_workflow.yml` (for Production)
- Inputs passed: release number, paths, environment

🔁 2. Reusable Workflow: `.github/workflows/dacpac_workflow.yml`
- Called by: `deploy-uat` and `deploy-prod`
- Main responsibilities:
  - Start deployment tracking
  - Download and prepare packages
  - Prepare database instance matrix
  - Setup temporary SQL user
  - Generate deploy report and script
  - Notify start (Slack)
  - Request approval if needed → Calls `approval.yml`
  - Perform final publish → Calls `deploy_dacpac.yml`
  - Cleanup SQL user
  - Final Slack and deploy tracking notification

📦 3. Reusable DACPAC Executor: `.github/workflows/deploy_dacpac.yml`
- Called by: `dacpac_workflow.yml`
- Executes one of the following actions:
  - DeployReport
  - Script
  - Publish
- Steps:
  - Assume AWS OIDC role
  - Download artifacts
  - Execute action via SQL DACPAC deployer
  - Optionally post a New Relic release event

✅ 4. Reusable Approval Workflow: `.github/workflows/approval.yml`
- Called by:
  - `workpapers_db.yml` for production manual approval
  - `dacpac_workflow.yml` if `approval-environment` is configured
- Simple manual gate using GitHub Environments

📌 Visual Layout Suggestion:
workpapers_db.yml
├── deploy-uat ─────────────▶ dacpac_workflow.yml (env: test)
│                               └── calls deploy_dacpac.yml 3x (DeployReport, Script, Publish)
│                               └── optionally calls approval.yml
│
├── approval-prod-env ──────▶ approval.yml
│
└── deploy-prod ────────────▶ dacpac_workflow.yml (env: production)
                                └── same structure as above

📎 Notes:
- Use grouped boxes or nested flows per workflow
- Label each reusable workflow call with `uses:`
- Slack notifications occur in `notify-start` and `notify`
- DeployTrack integration wraps start and end of deploy flow

Keep the diagram clean and readable — do not show internal job details unless part of workflow-to-workflow relationship.
