SqlDeployReportCheck.ps1 Code is below: -

param(
    [Parameter(Mandatory = $true)]
    [string]$DeployReportPath
)

$NoChangesReport = '<?xml version="1.0" encoding="utf-8"?><DeploymentReport xmlns="https://schemas.microsoft.com/sqlserver/dac/DeployReport/2012/02"><Alerts /></DeploymentReport>'

if (-not (Test-Path $DeployReportPath)) {
    Write-Output "ERROR: Deploy report file not found at: $DeployReportPath"
    exit 1
}

$deployReportContent = Get-Content $DeployReportPath -Raw

if ($deployReportContent -eq $NoChangesReport) {
    Write-Output "No change detected in database. Deploy report matches baseline."
    $ApprovalRequired = "false"
} else {
    Write-Output "Change detected in database! Deploy report differs from baseline."
    $ApprovalRequired = "true"
}

if ($env:GITHUB_ENV) {
    "ApprovalRequired=$ApprovalRequired" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
}

#######################

    - name: SQL Deploy Report Check
      id: sql-deploy-report-check
      shell: powershell
      run: |
        $scriptPath = "${{ github.workspace }}\od-gha-files\SqlDeployReportCheck.ps1"
        $pathsArray = $env:OutPutPath -split ','
    
        foreach ($path in $pathsArray) {
          powershell -ExecutionPolicy Bypass -File $scriptPath -DeployReportPath $path
        }
        
        # Set both environment variable and job output
        echo "ApprovalRequired=$env:ApprovalRequired" >> $env:GITHUB_OUTPUT
        echo "approval_required=$env:ApprovalRequired" >> $env:GITHUB_OUTPUT


    - name: Verify Approval Required Status
      id: verify-approval
      shell: powershell
      run: |
        echo "ApprovalRequired from env: ${{ env.ApprovalRequired }}"
        echo "ApprovalRequired from outputs: ${{ steps.sql-deploy-report-check.outputs.ApprovalRequired }}"
        echo "approval_required from outputs: ${{ steps.sql-deploy-report-check.outputs.approval_required }}"

    - name: Slack - Manual Approval Notification
      id: manual_approval_notification
      if: |
        ${{ 
          env.ApprovalRequired == 'true' || steps.sql-deploy-report-check.outputs.ApprovalRequired == 'true' || steps.sql-deploy-report-check.outputs.approval_required == 'true' }}
      shell: bash
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"*EmployeeInvitation database deployment requires manual approval* \n<${{ github.server_url }}/${{ github.repository }}/actions|${{ github.event.repository.name }}> database deployment requires manual approval for release <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ env.RELEASE_NUMBER }}> to ${{ vars.ENVIRONMENT }}"}' \
        "$SLACK_WEBHOOK_URL"
      
    - name: Slack - Manual Approval Notification for Artifacts Review
      id: manual_approval_notification_artifacts_review
      if: |
        ${{ 
          (env.ApprovalRequired == 'true' || steps.sql-deploy-report-check.outputs.ApprovalRequired == 'true' || steps.sql-deploy-report-check.outputs.approval_required == 'true') && env.ADD_ARTIFACTS_TO_RELEASE == 'true' }}
      shell: bash
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"*Review Deployment Artifacts* \nReview the DACPAC Deploy Report and Deploy Script: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ env.ARTIFACT_ID }}|Click Here>"}' \
        "$SLACK_WEBHOOK_URL"

  wait-for-approval:
    runs-on: [ self-hosted, windows, runners-us-west-2 ]
    environment: approval
    needs: generate-deploy-report-deploy-script
    if: ${{ needs.generate-deploy-report-deploy-script.outputs.ApprovalRequired == 'true' || needs.generate-deploy-report-deploy-script.outputs.approval_required == 'true' }}
    steps:
    - name: Display Output
      run: |
        echo "Approval required: ${{ needs.generate-deploy-report-deploy-script.outputs.ApprovalRequired }}"
    - name: "Review - Deploy Report and Deploy Script"
      run: |
        echo "The request has been approved by the approvers. Proceeding with next steps"

  deploy-publish:
    runs-on: [ self-hosted, windows, runners-us-west-2 ]
    environment: test
    needs: 
      - generate-deploy-report-deploy-script
      - wait-for-approval
    if: ${{ 
      (needs.generate-deploy-script.outputs.ApprovalRequired == 'false' || needs.generate-deploy-script.outputs.approval_required == 'false') || (needs.wait-for-approval.result == 'success')
      }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: Download Dependencies and Utilities
        id: download-dependencies
        uses: ./.github/actions/download-packages
        with:
          oidc-role: ${{ vars.oidc_role_arn }}
          oidc-target-role: ${{ vars.deployment_role_arn }}
          aws-region: ${{ vars.AWS_REGION }}


########################

name: Employee Invitation Github Workflow

on:
  pull_request:
    paths:
    - '.github/workflows/employee_invitation_workflow.yml'
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read
  

env:
  DACPAC_OUTPUT_DIR: 'C:\dacpac-extracts'
  SQLPACKAGE_DIR: '${{ github.workspace }}\sqlpackage'
  SQL_PASSWORD_PARAMETER_STORE: ${{ vars.SQL_PASSWORD_PARAMETER_STORE }}
  SQL_USER_NAME: ${{ vars.SQL_USER_NAME }}
  OD_GHA_FILE_PATH: "od-gha-files"
  AWS_REGION: ${{ vars.AWS_REGION }}
  DB_NAME: ${{ vars.DB_NAME }}
  NUGET_PACKAGE_PATH: ${{ vars.NUGET_PACKAGE_PATH }}
  NUGET_CONTRIBUTORS_PACKAGE_PATH: ${{ vars.NUGET_CONTRIBUTORS_PACKAGE_PATH }}
  TARGET_SERVERS: ${{ vars.TARGET_SERVERS }}
  ADD_ARTIFACTS_TO_RELEASE: ${{ vars.ADD_ARTIFACTS_TO_RELEASE }}
  PUBLISH_PROFILE_FILE_NAME: ${{ vars.PUBLISH_PROFILE_FILE_NAME }}
  MULTI_SUBNET_FAILOVER: ${{ vars.MULTI_SUBNET_FAILOVER }}
  USE_CLUSTER_NAMES: ${{ vars.USE_CLUSTER_NAMES }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  MATRIX_INSTANCE_LIST: ${{ vars.MATRIX_INSTANCE_LIST }}
  RELEASE_NUMBER: ${{ vars.RELEASE_NUMBER }}
  DACPAC_ENVIRONMENT: ${{ vars.DACPAC_ENVIRONMENT }}
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}
  SQL_PACKAGE_DEPLOY_PROPERTIES: ${{ vars.SQL_PACKAGE_DEPLOY_PROPERTIES }}
  SQL_CMD_VARIABLES: ${{ vars.SQL_CMD_VARIABLES }}
  SQL_PACKAGE_PARAMETERS: ${{ vars.SQL_PACKAGE_PARAMETERS }}

jobs:
  generate-deploy-report-deploy-script:
    runs-on: [ self-hosted, windows, runners-us-west-2 ]
    environment: test
    steps:
    - name: "Checkout"
      uses: actions/checkout@v4

    - name: Download Dependencies and Utilities
      id: download-dependencies
      uses: ./.github/actions/download-packages
      with:
        oidc-role: ${{ vars.oidc_role_arn }}
        oidc-target-role: ${{ vars.deployment_role_arn }}
        aws-region: ${{ vars.AWS_REGION }}

###############################################

- name: SQL Deploy Report Check
  id: sql-deploy-report-check
  shell: powershell
  run: |
    $scriptPath = "${{ github.workspace }}\od-gha-files\SqlDeployReportCheck.ps1"
    $pathsArray = $env:OutPutPath -split ','

    $ApprovalRequired = $false

    foreach ($path in $pathsArray) {
      $output = powershell -ExecutionPolicy Bypass -File $scriptPath -DeployReportPath $path
      Write-Host "DeployReportCheck Output: $output"

      if ($output -match "Change detected in database") {
        $ApprovalRequired = $true
      }
    }

    # Now ApprovalRequired is properly set
    if ($ApprovalRequired) {
      "ApprovalRequired=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
    } else {
      "ApprovalRequired=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
    }



- name: Print GITHUB_OUTPUT for debug
  shell: powershell
  run: Get-Content $env:GITHUB_OUTPUT


Refreshing environment variables from the registry for powershell.exe. Please wait...
Finished
Change detected in database! Deploy report differs from baseline.
You cannot call a method on a null-valued expression.
At C:\actions-runner\_work\_temp\37bf53b4-9a42-4cdf-9299-6713792543af.ps1:10 char:1
+ $ApprovalRequired = $env:ApprovalRequired.Trim()
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : InvokeMethodOnNull
 
Error: Process completed with exit code 1.
