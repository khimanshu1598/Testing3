name: 'Get EC2 Instance ID from Dynamite API'
description: 'Retrieves instance ID based on DB name, role, AWS region and environment'
inputs:
  target-servers:
    description: 'The host to deploy the DACPAC to'
    required: true
  db-name:
    description: 'The database name the DACPAC is being applied against'
    required: true
  role-list:
    description: 'List of roles associated with target servers (JSON array or comma-separated)'
    required: true
  db-server-host:
    description: 'DB server hostname (depending upon the environment)'
    required: false
  is-test-account:
    description: 'Boolean value for impersonating user via Windows Authentication'
    required: true
    default: 'false'
  aws-region:
    description: 'AWS region where the instances are located'
    required: true
    default: 'us-west-2'

outputs:
  MATRIX_INSTANCE_LIST:
    description: 'JSON matrix containing instance IDs, DB server names, and roles'
    value: ${{ steps.set-matrix.outputs.MATRIX_INSTANCE_LIST }}

runs:
  using: "composite"
  steps:
    - name: Debug Inputs
      shell: bash
      run: |
        echo "Input parameters received:"
        echo "target-servers: ${{ inputs.target-servers }}"
        echo "db-name: ${{ inputs.db-name }}"
        echo "role-list: ${{ inputs.role-list }}"
        echo "db-server-host: ${{ inputs.db-server-host }}"
        echo "is-test-account: ${{ inputs.is-test-account }}"
        echo "aws-region: ${{ inputs.aws-region }}"

    - name: Validate Inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.target-servers }}" ]; then
          echo "::error::Input 'target-servers' is required but not provided."
          exit 1
        fi

        if [ -z "${{ inputs.db-name }}" ]; then
          echo "::error::Input 'db-name' is required but not provided."
          exit 1
        fi

        if [ -z "${{ inputs.role-list }}" ]; then
          echo "::error::Input 'role-list' is required but not provided."
          exit 1
        fi

        if [ -z "${{ inputs.aws-region }}" ]; then
          echo "::error::Input 'aws-region' is required but not provided."
          exit 1
        fi
