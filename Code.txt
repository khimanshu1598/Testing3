param(
    [Parameter(Mandatory = $true)]
    [string]$DeployReportPath
)

$NoChangesReport = '<?xml version="1.0" encoding="utf-8"?><DeploymentReport xmlns="https://schemas.microsoft.com/sqlserver/dac/DeployReport/2012/02"><Alerts /></DeploymentReport>'

if (-not (Test-Path $DeployReportPath)) {
    Write-Output "ERROR: Deploy report file not found at: $DeployReportPath"
    exit 1
}

$deployReportContent = Get-Content $DeployReportPath -Raw

if ($deployReportContent -eq $NoChangesReport) {
    Write-Output "No change detected in database. Deploy report matches baseline."
    $ApprovalRequired = "false"
} else {
    Write-Output "Change detected in database! Deploy report differs from baseline."
    $ApprovalRequired = "true"
}

if ($env:GITHUB_ENV) {
    "ApprovalRequired=$ApprovalRequired" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
}

    - name: SQL Deploy Report Check
      shell: powershell
      run: |
        
        $scriptPath = "${{ github.workspace }}\od-gha-files\SqlDeployReportCheck.ps1"
        # $reportPath = "${{ github.workspace }}\dacpacs\Database.xml"

        $pathsArray = $env:OutPutPath -split ','

        foreach ($path in $pathsArray) {
            powershell -ExecutionPolicy Bypass -File $scriptPath -DeployReportPath $path
        }

        # # powershell -ExecutionPolicy Bypass -File $scriptPath -DeployReportPath $reportPath
        # powershell -ExecutionPolicy Bypass -File $scriptPath -DeployReportPath $env:outputPath

    - name: Print approval status
      run: echo "ApprovalRequired is ${{ env.ApprovalRequired }}"

    - name: Slack - Manual Approval Notification
      id: manual_approval_notification
      if: steps.script-dacpac.outcome == 'success'
      shell: bash
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"*EmployeeInvitation database deployment requires manual approval* \n<${{ github.server_url }}/${{ github.repository }}/actions|${{ github.event.repository.name }}> database deployment requires manual approval for release <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ env.RELEASE_NUMBER }}> to ${{ vars.ENVIRONMENT }}"}' \
        "$SLACK_WEBHOOK_URL"

    - name: Slack - Manual Approval Notification for Artifacts Review
      id: manual_approval_notification_artifacts_review
      if: steps.script-dacpac.outcome == 'success' && ${{ env.ADD_ARTIFACTS_TO_RELEASE }} == 'true'
      shell: bash
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"*Review Deployment Artifacts* \nReview the DACPAC Deploy Report and Deploy Script: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ env.ARTIFACT_ID }}|Click Here>"}' \
        "$SLACK_WEBHOOK_URL"

  wait-for-approval:
    runs-on: [ self-hosted, windows, runners-us-west-2 ]
    environment: approval
    needs: generate-deploy-report-deploy-script
    steps:
    - name: "Review - Deploy Report and Deploy Script"
      run: |
        echo "The request has been approved the by the approvers.Proceeding with next steps"

  deploy-publish:
    runs-on: [ self-hosted, windows, runners-us-west-2 ]
    environment: test
    needs: wait-for-approval
    steps:
    - name: "Checkout"
      uses: actions/checkout@v4
    - name: Download Dependencies and Utilities
      id: download-dependencies
      uses: ./.github/actions/download-packages
      with:
        oidc-role: ${{ vars.oidc_role_arn }}
        oidc-target-role: ${{ vars.deployment_role_arn }}
        aws-region: ${{ vars.AWS_REGION }}
